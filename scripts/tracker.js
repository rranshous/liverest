// Generated by CoffeeScript 1.3.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['mediator'], function(mediator) {
    var Tracker;
    return Tracker = (function() {

      function Tracker() {
        this.tracked = {};
      }

      Tracker.prototype.track = function(id, obj) {
        if (id == null) {
          return;
        }
        if (__indexOf.call(this.tracked, id) < 0) {
          this.tracked[id] = [];
        }
        if (__indexOf.call(this.tracked[id], obj) < 0) {
          this.tracked[id].push(obj);
        }
        mediator.fire('tracker:add', {
          id: id,
          obj: obj
        });
        return this;
      };

      Tracker.prototype.forEach = function(id, callback) {
        (this.tracked[id] || []).forEach(callback);
        return this;
      };

      Tracker.prototype.first = function(id) {
        var _ref;
        if (((_ref = this.tracked[id]) != null ? _ref.length : void 0) > 0) {
          return this.tracked[id][0];
        }
      };

      Tracker.prototype.remove = function(id, obj) {
        var found, _ref;
        if (!((obj != null) && (id != null))) {
          return;
        }
        found = __indexOf.call(this.tracked[id], obj) >= 0;
        if (found) {
          if ((_ref = this.tracked[id]) != null) {
            _ref.remove(obj);
          }
        }
        mediator.fire('tracker:remove', {
          id: id,
          obj: obj
        });
        return this;
      };

      return Tracker;

    })();
  });

}).call(this);
